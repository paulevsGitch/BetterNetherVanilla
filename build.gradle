plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
def local_bclib = findProject(':BCLib') != null

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// https://mvnrepository.com/artifact/javax.annotation/jsr305
	compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'	

	println "Using local BCLib: ${local_bclib}"
    if (local_bclib){
		implementation project(path:":BCLib", configuration:'dev')
    } else {
        modImplementation "com.github.paulevsGitch:BCLib:${project.bclib_version}"
    }
    
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://maven.terraformersmc.com/releases' }
    flatDir {
        dirs 'libs'
    }
}

def useApi(String dep) {
    dependencies.modImplementation(dep) {
        exclude group: 'net.fabricmc.fabric-api'
        exclude group: 'net.fabricmc'
        if (!dep.contains("me.shedaniel")) {
            exclude group: 'me.shedaniel.cloth'
            exclude group: 'me.shedaniel'
        }
    }
}

processResources {
    println "Version: ${project.version}"
	inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
    it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
